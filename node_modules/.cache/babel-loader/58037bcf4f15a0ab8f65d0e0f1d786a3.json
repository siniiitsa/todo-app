{"ast":null,"code":"import _objectSpread from \"/Users/rambutan/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/React apps/todo-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { generateID } from '../utils';\nconst initialState = {\n  todoItems: [{\n    id: generateID(),\n    description: 'Have a cup of tea',\n    important: false,\n    done: true\n  }, {\n    id: generateID(),\n    description: 'Have a cup of coffee',\n    important: false,\n    done: true\n  }, {\n    id: generateID(),\n    description: 'Have a cup of juice',\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Eat some fruit',\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Write some code',\n    important: false,\n    done: false\n  }],\n  statusFilter: 'all',\n  searchFilter: ''\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DELETE_TODO_ITEM':\n      {\n        const todoItems = state.todoItems.filter(item => item.id !== action.payload);\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'MARK_TODO_ITEM_IMPORTANT':\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.important = !targetItem.important;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'MARK_TODO_ITEM_DONE':\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.done = !targetItem.done;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'ADD_TODO_ITEM':\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        todoItems.push(action.payload);\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'FILTER_BY_STATUS':\n      {\n        return _objectSpread({}, state, {\n          statusFilter: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/rambutan/Разработка/React apps/todo-redux/src/reducers/todo-list-reducer.js"],"names":["generateID","initialState","todoItems","id","description","important","done","statusFilter","searchFilter","appReducer","state","action","type","filter","item","payload","map","targetItem","find","push"],"mappings":";AAAA,SAASA,UAAT,QAA2B,UAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAEH,UAAU,EADhB;AAEEI,IAAAA,WAAW,EAAE,mBAFf;AAGEC,IAAAA,SAAS,EAAE,KAHb;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADS,EAOT;AACEH,IAAAA,EAAE,EAAEH,UAAU,EADhB;AAEEI,IAAAA,WAAW,EAAE,sBAFf;AAGEC,IAAAA,SAAS,EAAE,KAHb;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPS,EAaT;AACEH,IAAAA,EAAE,EAAEH,UAAU,EADhB;AAEEI,IAAAA,WAAW,EAAE,qBAFf;AAGEC,IAAAA,SAAS,EAAE,KAHb;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbS,EAmBT;AACEH,IAAAA,EAAE,EAAEH,UAAU,EADhB;AAEEI,IAAAA,WAAW,EAAE,gBAFf;AAGEC,IAAAA,SAAS,EAAE,KAHb;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAnBS,EAyBT;AACEH,IAAAA,EAAE,EAAEH,UAAU,EADhB;AAEEI,IAAAA,WAAW,EAAE,iBAFf;AAGEC,IAAAA,SAAS,EAAE,KAHb;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAzBS,CADQ;AAiCnBC,EAAAA,YAAY,EAAE,KAjCK;AAkCnBC,EAAAA,YAAY,EAAE;AAlCK,CAArB;;AAqCA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvB,cAAMV,SAAS,GAAGQ,KAAK,CAACR,SAAN,CAAgBW,MAAhB,CAChBC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYQ,MAAM,CAACI,OADX,CAAlB;AAGA,iCAAYL,KAAZ;AAAmBR,UAAAA;AAAnB;AACD;;AACD,SAAK,0BAAL;AAAiC;AAC/B,cAAMA,SAAS,GAAGQ,KAAK,CAACR,SAAN,CAAgBc,GAAhB,CAAoBF,IAAI,sBAAUA,IAAV,CAAxB,CAAlB;AACA,cAAMG,UAAU,GAAGf,SAAS,CAACgB,IAAV,CAAeJ,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYQ,MAAM,CAACI,OAA1C,CAAnB;AACAE,QAAAA,UAAU,CAACZ,SAAX,GAAuB,CAACY,UAAU,CAACZ,SAAnC;AACA,iCAAYK,KAAZ;AAAmBR,UAAAA;AAAnB;AACD;;AACD,SAAK,qBAAL;AAA4B;AAC1B,cAAMA,SAAS,GAAGQ,KAAK,CAACR,SAAN,CAAgBc,GAAhB,CAAoBF,IAAI,sBAAUA,IAAV,CAAxB,CAAlB;AACA,cAAMG,UAAU,GAAGf,SAAS,CAACgB,IAAV,CAAeJ,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYQ,MAAM,CAACI,OAA1C,CAAnB;AACAE,QAAAA,UAAU,CAACX,IAAX,GAAkB,CAACW,UAAU,CAACX,IAA9B;AACA,iCAAYI,KAAZ;AAAmBR,UAAAA;AAAnB;AACD;;AACD,SAAK,eAAL;AAAsB;AACpB,cAAMA,SAAS,GAAGQ,KAAK,CAACR,SAAN,CAAgBc,GAAhB,CAAoBF,IAAI,sBAAUA,IAAV,CAAxB,CAAlB;AACAZ,QAAAA,SAAS,CAACiB,IAAV,CAAeR,MAAM,CAACI,OAAtB;AACA,iCAAYL,KAAZ;AAAmBR,UAAAA;AAAnB;AACD;;AACD,SAAK,kBAAL;AAAyB;AACvB,iCAAYQ,KAAZ;AAAmBH,UAAAA,YAAY,EAAEI,MAAM,CAACI;AAAxC;AACD;;AACD;AACE,aAAOL,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,UAAf","sourcesContent":["import { generateID } from '../utils';\n\nconst initialState = {\n  todoItems: [\n    {\n      id: generateID(),\n      description: 'Have a cup of tea',\n      important: false,\n      done: true\n    },\n    {\n      id: generateID(),\n      description: 'Have a cup of coffee',\n      important: false,\n      done: true\n    },\n    {\n      id: generateID(),\n      description: 'Have a cup of juice',\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Eat some fruit',\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Write some code',\n      important: false,\n      done: false\n    }\n  ],\n  statusFilter: 'all',\n  searchFilter: ''\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DELETE_TODO_ITEM': {\n      const todoItems = state.todoItems.filter(\n        item => item.id !== action.payload\n      );\n      return { ...state, todoItems };\n    }\n    case 'MARK_TODO_ITEM_IMPORTANT': {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.important = !targetItem.important;\n      return { ...state, todoItems };\n    }\n    case 'MARK_TODO_ITEM_DONE': {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.done = !targetItem.done;\n      return { ...state, todoItems };\n    }\n    case 'ADD_TODO_ITEM': {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      todoItems.push(action.payload);\n      return { ...state, todoItems };\n    }\n    case 'FILTER_BY_STATUS': {\n      return { ...state, statusFilter: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}