{"ast":null,"code":"import { generateID } from '../utils';\n\nclass TodoService {\n  constructor() {\n    this._apiURL = 'http://jsonplaceholder.typicode.com/todos';\n  }\n\n  async getTodoItems(url = this._apiURL) {\n    const res = await fetch(url);\n    const body = await res.json();\n    return this._transformTodoItems(body);\n  }\n\n  _transformTodoItems(items) {\n    return items.slice(0, 30).filter(item => item.title.length < 20).map(item => {\n      return {\n        id: generateID(),\n        description: item.title,\n        done: item.completed,\n        important: false\n      };\n    });\n  }\n\n}\n\nexport default TodoService;","map":{"version":3,"sources":["/Users/rambutan/Разработка/React apps/todo-redux/src/services/todo-service.js"],"names":["generateID","TodoService","_apiURL","getTodoItems","url","res","fetch","body","json","_transformTodoItems","items","slice","filter","item","title","length","map","id","description","done","completed","important"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAChBC,OADgB,GACN,2CADM;AAAA;;AAGhB,QAAMC,YAAN,CAAmBC,GAAG,GAAG,KAAKF,OAA9B,EAAuC;AACrC,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,UAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAO,KAAKC,mBAAL,CAAyBF,IAAzB,CAAP;AACD;;AAEDE,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB,WAAOA,KAAK,CACTC,KADI,CACE,CADF,EACK,EADL,EAEJC,MAFI,CAEGC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,MAAX,GAAoB,EAF/B,EAGJC,GAHI,CAGAH,IAAI,IAAI;AACX,aAAO;AACLI,QAAAA,EAAE,EAAEjB,UAAU,EADT;AAELkB,QAAAA,WAAW,EAAEL,IAAI,CAACC,KAFb;AAGLK,QAAAA,IAAI,EAAEN,IAAI,CAACO,SAHN;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;AAMD,KAVI,CAAP;AAWD;;AArBe;;AAwBlB,eAAepB,WAAf","sourcesContent":["import { generateID } from '../utils';\n\nclass TodoService {\n  _apiURL = 'http://jsonplaceholder.typicode.com/todos';\n\n  async getTodoItems(url = this._apiURL) {\n    const res = await fetch(url);\n    const body = await res.json();\n    return this._transformTodoItems(body);\n  }\n\n  _transformTodoItems(items) {\n    return items\n      .slice(0, 30)\n      .filter(item => item.title.length < 20)\n      .map(item => {\n        return {\n          id: generateID(),\n          description: item.title,\n          done: item.completed,\n          important: false\n        };\n      });\n  }\n}\n\nexport default TodoService;\n"]},"metadata":{},"sourceType":"module"}