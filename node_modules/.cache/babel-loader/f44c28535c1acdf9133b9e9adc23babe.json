{"ast":null,"code":"import _objectSpread from \"/Users/rambutan/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/React apps/todo-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { generateID } from '../utils';\nconst initialState = {\n  todoItems: [{\n    id: generateID(),\n    description: 'Have a cup of tea',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Have a cup of coffee',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Have a cup of juice',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Eat some fruit',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Write some code',\n    isDone: false,\n    important: false,\n    done: false\n  }]\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DELETE_TODO_ITEM':\n      {\n        const todoItems = state.todoItems.filter(item => item.id !== action.payload);\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'MARK_TODO_ITEM_IMPORTANT':\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.important = !targetItem.important;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'MARK_TODO_ITEM_DONE':\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.done = !targetItem.done;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'ADD_TODO_ITEM':\n      {\n        console.log(state);\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        todoItems.push(action.payload);\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/rambutan/Разработка/React apps/todo-redux/src/reducers/todo-list-reducer.js"],"names":["generateID","initialState","todoItems","id","description","isDone","important","done","appReducer","state","action","type","filter","item","payload","map","targetItem","find","console","log","push"],"mappings":"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","sourcesContent":["import { generateID } from '../utils';\n\nconst initialState = {\n  todoItems: [\n    {\n      id: generateID(),\n      description: 'Have a cup of tea',\n      isDone: false,\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Have a cup of coffee',\n      isDone: false,\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Have a cup of juice',\n      isDone: false,\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Eat some fruit',\n      isDone: false,\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Write some code',\n      isDone: false,\n      important: false,\n      done: false\n    }\n  ]\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DELETE_TODO_ITEM': {\n      const todoItems = state.todoItems.filter(\n        item => item.id !== action.payload\n      );\n      return { ...state, todoItems };\n    }\n    case 'MARK_TODO_ITEM_IMPORTANT': {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.important = !targetItem.important;\n      return { ...state, todoItems };\n    }\n    case 'MARK_TODO_ITEM_DONE': {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.done = !targetItem.done;\n      return { ...state, todoItems };\n    }\n    case 'ADD_TODO_ITEM': {\n      console.log(state);\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      todoItems.push(action.payload);\n      return { ...state, todoItems };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}