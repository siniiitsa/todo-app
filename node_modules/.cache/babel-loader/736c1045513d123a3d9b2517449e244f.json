{"ast":null,"code":"import _objectSpread from \"/Users/rambutan/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/React apps/todo-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  todoItems: [{\n    id: 1,\n    description: 'Have a cup of tea',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: 2,\n    description: 'Have a cup of coffee',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: 3,\n    description: 'Have a cup of juice',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: 4,\n    description: 'Eat some fruit',\n    isDone: false,\n    important: false,\n    done: false\n  }, {\n    id: 5,\n    description: 'Write some code',\n    isDone: false,\n    important: false,\n    done: false\n  }]\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DELETE_TODO_ITEM':\n      {\n        const todoItems = state.todoItems.filter(item => item.id !== action.payload);\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'MARK_TODO_ITEM_IMPORTANT':\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.important = !targetItem.important;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case 'MARK_TODO_ITEM_DONE':\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.done = !targetItem.done;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/rambutan/Разработка/React apps/todo-redux/src/reducers/todoListReducer.js"],"names":["initialState","todoItems","id","description","isDone","important","done","appReducer","state","action","type","filter","item","payload","map","targetItem","find"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CACT;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,mBAAtB;AAA2CC,IAAAA,MAAM,EAAE,KAAnD;AAA0DC,IAAAA,SAAS,EAAE,KAArE;AAA4EC,IAAAA,IAAI,EAAE;AAAlF,GADS,EAET;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,sBAAtB;AAA8CC,IAAAA,MAAM,EAAE,KAAtD;AAA6DC,IAAAA,SAAS,EAAE,KAAxE;AAA+EC,IAAAA,IAAI,EAAE;AAArF,GAFS,EAGT;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,qBAAtB;AAA6CC,IAAAA,MAAM,EAAE,KAArD;AAA4DC,IAAAA,SAAS,EAAE,KAAvE;AAA8EC,IAAAA,IAAI,EAAE;AAApF,GAHS,EAIT;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,gBAAtB;AAAwCC,IAAAA,MAAM,EAAE,KAAhD;AAAuDC,IAAAA,SAAS,EAAE,KAAlE;AAAyEC,IAAAA,IAAI,EAAE;AAA/E,GAJS,EAKT;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,iBAAtB;AAAyCC,IAAAA,MAAM,EAAE,KAAjD;AAAwDC,IAAAA,SAAS,EAAE,KAAnE;AAA0EC,IAAAA,IAAI,EAAE;AAAhF,GALS;AADQ,CAArB;;AAUA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvB,cAAMT,SAAS,GAAGO,KAAK,CAACP,SAAN,CAAgBU,MAAhB,CAChBC,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYO,MAAM,CAACI,OADX,CAAlB;AAGA,iCAAYL,KAAZ;AAAmBP,UAAAA;AAAnB;AACD;;AACD,SAAK,0BAAL;AAAiC;AAC/B,cAAMA,SAAS,GAAGO,KAAK,CAACP,SAAN,CAAgBa,GAAhB,CAAoBF,IAAI,sBAASA,IAAT,CAAxB,CAAlB;AACA,cAAMG,UAAU,GAAGd,SAAS,CAACe,IAAV,CAAeJ,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYO,MAAM,CAACI,OAA1C,CAAnB;AACAE,QAAAA,UAAU,CAACV,SAAX,GAAuB,CAACU,UAAU,CAACV,SAAnC;AACA,iCAAYG,KAAZ;AAAmBP,UAAAA;AAAnB;AACD;;AACD,SAAK,qBAAL;AAA4B;AAC1B,cAAMA,SAAS,GAAGO,KAAK,CAACP,SAAN,CAAgBa,GAAhB,CAAoBF,IAAI,sBAASA,IAAT,CAAxB,CAAlB;AACA,cAAMG,UAAU,GAAGd,SAAS,CAACe,IAAV,CAAeJ,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYO,MAAM,CAACI,OAA1C,CAAnB;AACAE,QAAAA,UAAU,CAACT,IAAX,GAAkB,CAACS,UAAU,CAACT,IAA9B;AACA,iCAAYE,KAAZ;AAAmBP,UAAAA;AAAnB;AACD;;AACD;AACE,aAAOO,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,UAAf","sourcesContent":["const initialState = {\n  todoItems: [\n    { id: 1, description: 'Have a cup of tea', isDone: false, important: false, done: false },\n    { id: 2, description: 'Have a cup of coffee', isDone: false, important: false, done: false },\n    { id: 3, description: 'Have a cup of juice', isDone: false, important: false, done: false },\n    { id: 4, description: 'Eat some fruit', isDone: false, important: false, done: false },\n    { id: 5, description: 'Write some code', isDone: false, important: false, done: false }\n  ]\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DELETE_TODO_ITEM': {\n      const todoItems = state.todoItems.filter(\n        item => item.id !== action.payload\n      );\n      return { ...state, todoItems };\n    }\n    case 'MARK_TODO_ITEM_IMPORTANT': {\n      const todoItems = state.todoItems.map(item => ({...item}));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.important = !targetItem.important;\n      return { ...state, todoItems };\n    }\n    case 'MARK_TODO_ITEM_DONE': {\n      const todoItems = state.todoItems.map(item => ({...item}));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.done = !targetItem.done;\n      return { ...state, todoItems };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}