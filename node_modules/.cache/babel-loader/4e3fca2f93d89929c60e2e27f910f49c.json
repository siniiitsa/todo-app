{"ast":null,"code":"var _jsxFileName = \"/Users/rambutan/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/React apps/todo-redux/src/components/todo-list/todo-list.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteTodoItem, markTodoItemImportant, markTodoItemDone } from '../../actions/todo-list-actions';\nimport TodoListItem from '../todo-list-item';\n\nconst TodoList = ({\n  todoItems,\n  statusFilter,\n  deleteTodoItem,\n  markTodoItemImportant,\n  markTodoItemDone\n}) => {\n  const filterByStatus = (items, status) => {\n    if (status === 'done') return items.filter(item => item.isDone);\n    if (status === 'active') return items.filter(item => !item.isDone);\n    return items;\n  };\n\n  const todos = filterByStatus(todoItems, statusFilter).map(item => React.createElement(\"li\", {\n    key: item.id,\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(TodoListItem, Object.assign({\n    deleteTodoItem: deleteTodoItem,\n    markTodoItemImportant: markTodoItemImportant,\n    markTodoItemDone: markTodoItemDone\n  }, item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))));\n  return React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, todos);\n};\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.todoListReducer.todoItems,\n    statusFilter: state.todoListReducer.statusFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodoItem: itemID => dispatch(deleteTodoItem(itemID)),\n    markTodoItemImportant: itemID => dispatch(markTodoItemImportant(itemID)),\n    markTodoItemDone: itemID => dispatch(markTodoItemDone(itemID))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/rambutan/Разработка/React apps/todo-redux/src/components/todo-list/todo-list.jsx"],"names":["React","connect","deleteTodoItem","markTodoItemImportant","markTodoItemDone","TodoListItem","TodoList","todoItems","statusFilter","filterByStatus","items","status","filter","item","isDone","todos","map","id","mapStateToProps","state","todoListReducer","mapDispatchToProps","dispatch","itemID"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,cADF,EAEEC,qBAFF,EAGEC,gBAHF,QAIO,iCAJP;AAKA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,SADgB;AAEhBC,EAAAA,YAFgB;AAGhBN,EAAAA,cAHgB;AAIhBC,EAAAA,qBAJgB;AAKhBC,EAAAA;AALgB,CAAD,KAMX;AACJ,QAAMK,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,QAAIA,MAAM,KAAK,MAAf,EAAuB,OAAOD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,MAA1B,CAAP;AACvB,QAAIH,MAAM,KAAK,QAAf,EAAyB,OAAOD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,MAA3B,CAAP;AACzB,WAAOJ,KAAP;AACD,GAJD;;AAMA,QAAMK,KAAK,GAAGN,cAAc,CAACF,SAAD,EAAYC,YAAZ,CAAd,CAAwCQ,GAAxC,CAA4CH,IAAI,IAC5D;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACI,EAAd;AAAkB,IAAA,SAAS,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,cAAc,EAAEf,cADlB;AAEE,IAAA,qBAAqB,EAAEC,qBAFzB;AAGE,IAAA,gBAAgB,EAAEC;AAHpB,KAIMS,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADY,CAAd;AAWA,SAAO;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BE,KAA5B,CAAP;AACD,CAzBD;;AA2BA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLZ,IAAAA,SAAS,EAAEY,KAAK,CAACC,eAAN,CAAsBb,SAD5B;AAELC,IAAAA,YAAY,EAAEW,KAAK,CAACC,eAAN,CAAsBZ;AAF/B,GAAP;AAID,CALD;;AAOA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLpB,IAAAA,cAAc,EAAEqB,MAAM,IAAID,QAAQ,CAACpB,cAAc,CAACqB,MAAD,CAAf,CAD7B;AAELpB,IAAAA,qBAAqB,EAAEoB,MAAM,IAAID,QAAQ,CAACnB,qBAAqB,CAACoB,MAAD,CAAtB,CAFpC;AAGLnB,IAAAA,gBAAgB,EAAEmB,MAAM,IAAID,QAAQ,CAAClB,gBAAgB,CAACmB,MAAD,CAAjB;AAH/B,GAAP;AAKD,CAND;;AAQA,eAAetB,OAAO,CACpBiB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbf,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  deleteTodoItem,\n  markTodoItemImportant,\n  markTodoItemDone\n} from '../../actions/todo-list-actions';\nimport TodoListItem from '../todo-list-item';\n\nconst TodoList = ({\n  todoItems,\n  statusFilter,\n  deleteTodoItem,\n  markTodoItemImportant,\n  markTodoItemDone\n}) => {\n  const filterByStatus = (items, status) => {\n    if (status === 'done') return items.filter(item => item.isDone);\n    if (status === 'active') return items.filter(item => !item.isDone);\n    return items;\n  };\n\n  const todos = filterByStatus(todoItems, statusFilter).map(item => (\n    <li key={item.id} className=\"list-group-item\">\n      <TodoListItem\n        deleteTodoItem={deleteTodoItem}\n        markTodoItemImportant={markTodoItemImportant}\n        markTodoItemDone={markTodoItemDone}\n        {...item}\n      />\n    </li>\n  ));\n\n  return <ul className=\"list-group\">{todos}</ul>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.todoListReducer.todoItems,\n    statusFilter: state.todoListReducer.statusFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodoItem: itemID => dispatch(deleteTodoItem(itemID)),\n    markTodoItemImportant: itemID => dispatch(markTodoItemImportant(itemID)),\n    markTodoItemDone: itemID => dispatch(markTodoItemDone(itemID))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n"]},"metadata":{},"sourceType":"module"}