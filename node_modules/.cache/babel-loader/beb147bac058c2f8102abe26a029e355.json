{"ast":null,"code":"var _jsxFileName = \"/Users/rambutan/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/Projects/todo-app/src/components/todo-list/todo-list.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteTodoItem, markTodoItemImportant, markTodoItemDone, initTodoList } from '../../actions/todo-list-actions';\nimport TodoListItem from '../todo-list-item';\nimport TodoService from '../../services/todo-service';\nimport Loader from '../loader/loader';\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.todoService = new TodoService();\n\n    this.filterByStatus = (items, status) => {\n      if (status === 'done') return items.filter(item => item.done);\n      if (status === 'active') return items.filter(item => !item.done);\n      return items;\n    };\n\n    this.filterBySearch = (items, value) => {\n      return items.filter(item => item.description.toLowerCase().includes(value.toLowerCase()));\n    };\n\n    this.createTodos = items => {\n      const _this$props = this.props,\n            todoItems = _this$props.todoItems,\n            deleteTodoItem = _this$props.deleteTodoItem,\n            markTodoItemImportant = _this$props.markTodoItemImportant,\n            markTodoItemDone = _this$props.markTodoItemDone;\n      return items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(TodoListItem, Object.assign({\n        todoItems: todoItems,\n        deleteTodoItem: deleteTodoItem,\n        markTodoItemImportant: markTodoItemImportant,\n        markTodoItemDone: markTodoItemDone\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))));\n    };\n  }\n\n  componentDidMount() {\n    const initTodoList = this.props.initTodoList;\n    setTimeout(() => {\n      this.todoService.getTodoItems().then(todos => initTodoList(todos));\n    }, 1000);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          todoItems = _this$props2.todoItems,\n          statusFilter = _this$props2.statusFilter,\n          searchFilter = _this$props2.searchFilter,\n          isLoading = _this$props2.isLoading;\n    const itemsByStatus = this.filterByStatus(todoItems, statusFilter);\n    const itemsBySearch = this.filterBySearch(itemsByStatus, searchFilter);\n    const todos = this.createTodos(itemsBySearch);\n    const loader = isLoading && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n    return React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, loader, todos);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.todoListReducer.todoItems,\n    statusFilter: state.todoListReducer.statusFilter,\n    searchFilter: state.todoListReducer.searchFilter,\n    isLoading: state.todoListReducer.initLoaderActive\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodoItem: itemID => dispatch(deleteTodoItem(itemID)),\n    markTodoItemImportant: itemID => dispatch(markTodoItemImportant(itemID)),\n    markTodoItemDone: itemID => dispatch(markTodoItemDone(itemID)),\n    initTodoList: todos => dispatch(initTodoList(todos))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/rambutan/Разработка/Projects/todo-app/src/components/todo-list/todo-list.jsx"],"names":["React","Component","connect","deleteTodoItem","markTodoItemImportant","markTodoItemDone","initTodoList","TodoListItem","TodoService","Loader","TodoList","todoService","filterByStatus","items","status","filter","item","done","filterBySearch","value","description","toLowerCase","includes","createTodos","props","todoItems","map","id","componentDidMount","setTimeout","getTodoItems","then","todos","render","statusFilter","searchFilter","isLoading","itemsByStatus","itemsBySearch","loader","mapStateToProps","state","todoListReducer","initLoaderActive","mapDispatchToProps","dispatch","itemID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  deleteTodoItem,\n  markTodoItemImportant,\n  markTodoItemDone,\n  initTodoList\n} from '../../actions/todo-list-actions';\nimport TodoListItem from '../todo-list-item';\nimport TodoService from '../../services/todo-service';\nimport Loader from '../loader/loader';\n\nclass TodoList extends Component {\n  todoService = new TodoService();\n\n  componentDidMount() {\n    const { initTodoList } = this.props;\n    setTimeout(() => {\n      this.todoService.getTodoItems().then(todos => initTodoList(todos));\n    }, 1000);\n  }\n\n  filterByStatus = (items, status) => {\n    if (status === 'done') return items.filter(item => item.done);\n    if (status === 'active') return items.filter(item => !item.done);\n    return items;\n  };\n\n  filterBySearch = (items, value) => {\n    return items.filter(item =>\n      item.description.toLowerCase().includes(value.toLowerCase())\n    );\n  };\n\n  createTodos = items => {\n    const {\n      todoItems,\n      deleteTodoItem,\n      markTodoItemImportant,\n      markTodoItemDone\n    } = this.props;\n\n    return items.map(item => (\n      <li key={item.id} className='list-group-item'>\n        <TodoListItem\n          todoItems={todoItems}\n          deleteTodoItem={deleteTodoItem}\n          markTodoItemImportant={markTodoItemImportant}\n          markTodoItemDone={markTodoItemDone}\n          {...item}\n        />\n      </li>\n    ));\n  };\n\n  render() {\n    const { todoItems, statusFilter, searchFilter, isLoading } = this.props;\n\n    const itemsByStatus = this.filterByStatus(todoItems, statusFilter);\n    const itemsBySearch = this.filterBySearch(itemsByStatus, searchFilter);\n    const todos = this.createTodos(itemsBySearch);\n    const loader = isLoading && <Loader />;\n\n    return (\n      <ul className='list-group'>\n        {loader}\n        {todos}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.todoListReducer.todoItems,\n    statusFilter: state.todoListReducer.statusFilter,\n    searchFilter: state.todoListReducer.searchFilter,\n    isLoading: state.todoListReducer.initLoaderActive\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodoItem: itemID => dispatch(deleteTodoItem(itemID)),\n    markTodoItemImportant: itemID => dispatch(markTodoItemImportant(itemID)),\n    markTodoItemDone: itemID => dispatch(markTodoItemDone(itemID)),\n    initTodoList: todos => dispatch(initTodoList(todos))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n"]},"metadata":{},"sourceType":"module"}