{"ast":null,"code":"var _jsxFileName = \"/Users/rambutan/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/React apps/todo-redux/src/components/todo-list/todo-list.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteTodoItem, markTodoItemImportant, markTodoItemDone } from '../../actions/todo-list-actions';\nimport TodoListItem from '../todo-list-item';\nimport TodoService from '../../services/todo-service';\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.todoService = new TodoService();\n\n    this.filterByStatus = (items, status) => {\n      if (status === 'done') return items.filter(item => item.done);\n      if (status === 'active') return items.filter(item => !item.done);\n      return items;\n    };\n\n    this.filterBySearch = (items, value) => {\n      return items.filter(item => item.description.toLowerCase().includes(value.toLowerCase()));\n    };\n\n    this.createTodos = items => {\n      const _this$props = this.props,\n            todoItems = _this$props.todoItems,\n            deleteTodoItem = _this$props.deleteTodoItem,\n            markTodoItemImportant = _this$props.markTodoItemImportant,\n            markTodoItemDone = _this$props.markTodoItemDone;\n      return items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(TodoListItem, Object.assign({\n        todoItems: todoItems,\n        deleteTodoItem: deleteTodoItem,\n        markTodoItemImportant: markTodoItemImportant,\n        markTodoItemDone: markTodoItemDone\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))));\n    };\n  }\n\n  componentDidMount() {\n    this.todoService.getTodoItems().then(data => console.log(data[1]));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          todoItems = _this$props2.todoItems,\n          statusFilter = _this$props2.statusFilter,\n          searchFilter = _this$props2.searchFilter;\n    const itemsByStatus = this.filterByStatus(todoItems, statusFilter);\n    const itemsBySearch = this.filterBySearch(itemsByStatus, searchFilter);\n    const todos = this.createTodos(itemsBySearch);\n    return React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, todos);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.todoListReducer.todoItems,\n    statusFilter: state.todoListReducer.statusFilter,\n    searchFilter: state.todoListReducer.searchFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodoItem: itemID => dispatch(deleteTodoItem(itemID)),\n    markTodoItemImportant: itemID => dispatch(markTodoItemImportant(itemID)),\n    markTodoItemDone: itemID => dispatch(markTodoItemDone(itemID))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/rambutan/Разработка/React apps/todo-redux/src/components/todo-list/todo-list.jsx"],"names":["React","Component","connect","deleteTodoItem","markTodoItemImportant","markTodoItemDone","TodoListItem","TodoService","TodoList","todoService","filterByStatus","items","status","filter","item","done","filterBySearch","value","description","toLowerCase","includes","createTodos","props","todoItems","map","id","componentDidMount","getTodoItems","then","data","console","log","render","statusFilter","searchFilter","itemsByStatus","itemsBySearch","todos","mapStateToProps","state","todoListReducer","mapDispatchToProps","dispatch","itemID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  deleteTodoItem,\n  markTodoItemImportant,\n  markTodoItemDone\n} from '../../actions/todo-list-actions';\nimport TodoListItem from '../todo-list-item';\nimport TodoService from '../../services/todo-service';\n\nclass TodoList extends Component {\n  todoService = new TodoService();\n\n  componentDidMount() {\n    this.todoService.getTodoItems().then(data => console.log(data[1]));\n  }\n\n  filterByStatus = (items, status) => {\n    if (status === 'done') return items.filter(item => item.done);\n    if (status === 'active') return items.filter(item => !item.done);\n    return items;\n  };\n\n  filterBySearch = (items, value) => {\n    return items.filter(item =>\n      item.description.toLowerCase().includes(value.toLowerCase())\n    );\n  };\n\n  createTodos = items => {\n    const {\n      todoItems,\n      deleteTodoItem,\n      markTodoItemImportant,\n      markTodoItemDone\n    } = this.props;\n\n    return items.map(item => (\n      <li key={item.id} className=\"list-group-item\">\n        <TodoListItem\n          todoItems={todoItems}\n          deleteTodoItem={deleteTodoItem}\n          markTodoItemImportant={markTodoItemImportant}\n          markTodoItemDone={markTodoItemDone}\n          {...item}\n        />\n      </li>\n    ));\n  };\n\n  render() {\n    const { todoItems, statusFilter, searchFilter } = this.props;\n\n    const itemsByStatus = this.filterByStatus(todoItems, statusFilter);\n    const itemsBySearch = this.filterBySearch(itemsByStatus, searchFilter);\n    const todos = this.createTodos(itemsBySearch);\n\n    return <ul className=\"list-group\">{todos}</ul>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.todoListReducer.todoItems,\n    statusFilter: state.todoListReducer.statusFilter,\n    searchFilter: state.todoListReducer.searchFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodoItem: itemID => dispatch(deleteTodoItem(itemID)),\n    markTodoItemImportant: itemID => dispatch(markTodoItemImportant(itemID)),\n    markTodoItemDone: itemID => dispatch(markTodoItemDone(itemID))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n"]},"metadata":{},"sourceType":"module"}