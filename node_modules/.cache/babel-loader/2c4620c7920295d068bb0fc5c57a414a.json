{"ast":null,"code":"import _objectSpread from \"/Users/rambutan/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/React apps/todo-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { generateID } from '../utils';\nimport { DELETE_TODO_ITEM, MARK_TODO_ITEM_IMPORTANT, MARK_TODO_ITEM_DONE, ADD_TODO_ITEM, FILTER_BY_STATUS, FILTER_ON_SEARCH } from '../actions/todo-list-actions';\nconst initialState = {\n  todoItems: [{\n    id: generateID(),\n    description: 'Have a cup of tea',\n    important: false,\n    done: true\n  }, {\n    id: generateID(),\n    description: 'Have a cup of coffee',\n    important: false,\n    done: true\n  }, {\n    id: generateID(),\n    description: 'Have a cup of juice',\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Eat some fruit',\n    important: false,\n    done: false\n  }, {\n    id: generateID(),\n    description: 'Write some code',\n    important: false,\n    done: false\n  }],\n  statusFilterButtons: [{\n    label: 'All',\n    status: 'all'\n  }, {\n    label: 'Active',\n    status: 'active'\n  }, {\n    label: 'Done',\n    status: 'done'\n  }],\n  statusFilter: 'all',\n  searchFilter: 'have'\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_TODO_ITEM:\n      {\n        const todoItems = state.todoItems.filter(item => item.id !== action.payload);\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case MARK_TODO_ITEM_IMPORTANT:\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.important = !targetItem.important;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case MARK_TODO_ITEM_DONE:\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        const targetItem = todoItems.find(item => item.id === action.payload);\n        targetItem.done = !targetItem.done;\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case ADD_TODO_ITEM:\n      {\n        const todoItems = state.todoItems.map(item => _objectSpread({}, item));\n        todoItems.push(action.payload);\n        return _objectSpread({}, state, {\n          todoItems\n        });\n      }\n\n    case FILTER_BY_STATUS:\n      {\n        return _objectSpread({}, state, {\n          statusFilter: action.payload\n        });\n      }\n\n    case FILTER_ON_SEARCH:\n      {\n        return _objectSpread({}, state, {\n          searchFilter: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/rambutan/Разработка/React apps/todo-redux/src/reducers/todo-list-reducer.js"],"names":["generateID","DELETE_TODO_ITEM","MARK_TODO_ITEM_IMPORTANT","MARK_TODO_ITEM_DONE","ADD_TODO_ITEM","FILTER_BY_STATUS","FILTER_ON_SEARCH","initialState","todoItems","id","description","important","done","statusFilterButtons","label","status","statusFilter","searchFilter","appReducer","state","action","type","filter","item","payload","map","targetItem","find","push"],"mappings":"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","sourcesContent":["import { generateID } from '../utils';\nimport {\n  DELETE_TODO_ITEM,\n  MARK_TODO_ITEM_IMPORTANT,\n  MARK_TODO_ITEM_DONE,\n  ADD_TODO_ITEM,\n  FILTER_BY_STATUS,\n  FILTER_ON_SEARCH\n} from '../actions/todo-list-actions';\n\nconst initialState = {\n  todoItems: [\n    {\n      id: generateID(),\n      description: 'Have a cup of tea',\n      important: false,\n      done: true\n    },\n    {\n      id: generateID(),\n      description: 'Have a cup of coffee',\n      important: false,\n      done: true\n    },\n    {\n      id: generateID(),\n      description: 'Have a cup of juice',\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Eat some fruit',\n      important: false,\n      done: false\n    },\n    {\n      id: generateID(),\n      description: 'Write some code',\n      important: false,\n      done: false\n    }\n  ],\n  statusFilterButtons: [\n    { label: 'All', status: 'all' },\n    { label: 'Active', status: 'active' },\n    { label: 'Done', status: 'done' }\n  ],\n  statusFilter: 'all',\n  searchFilter: 'have'\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_TODO_ITEM: {\n      const todoItems = state.todoItems.filter(\n        item => item.id !== action.payload\n      );\n      return { ...state, todoItems };\n    }\n    case MARK_TODO_ITEM_IMPORTANT: {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.important = !targetItem.important;\n      return { ...state, todoItems };\n    }\n    case MARK_TODO_ITEM_DONE: {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      const targetItem = todoItems.find(item => item.id === action.payload);\n      targetItem.done = !targetItem.done;\n      return { ...state, todoItems };\n    }\n    case ADD_TODO_ITEM: {\n      const todoItems = state.todoItems.map(item => ({ ...item }));\n      todoItems.push(action.payload);\n      return { ...state, todoItems };\n    }\n    case FILTER_BY_STATUS: {\n      return { ...state, statusFilter: action.payload };\n    }\n    case FILTER_ON_SEARCH: {\n      return { ...state, searchFilter: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}